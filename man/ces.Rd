% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adam-ces.R, R/autoces.R, R/ces.R
\name{ces}
\alias{ces}
\alias{auto.ces}
\alias{ces_old}
\title{Complex Exponential Smoothing}
\usage{
ces(data, seasonality = c("none", "simple", "partial", "full"),
  lags = c(frequency(data)), formula = NULL, regressors = c("use",
  "select", "adapt"), initial = c("backcasting", "optimal", "complete"),
  a = NULL, b = NULL, loss = c("likelihood", "MSE", "MAE", "HAM", "MSEh",
  "TMSE", "GTMSE", "MSCE"), h = 0, holdout = FALSE,
  bounds = c("admissible", "none"), silent = TRUE, model = NULL, ...)

auto.ces(data, seasonality = c("none", "simple", "partial", "full"),
  lags = c(frequency(data)), formula = NULL, regressors = c("use",
  "select", "adapt"), initial = c("backcasting", "optimal", "complete"),
  ic = c("AICc", "AIC", "BIC", "BICc"), loss = c("likelihood", "MSE",
  "MAE", "HAM", "MSEh", "TMSE", "GTMSE", "MSCE"), h = 0, holdout = FALSE,
  bounds = c("admissible", "none"), silent = TRUE, ...)

ces_old(data, seasonality = c("none", "simple", "partial", "full"),
  initial = c("backcasting", "optimal"), a = NULL, b = NULL,
  ic = c("AICc", "AIC", "BIC", "BICc"), loss = c("likelihood", "MSE",
  "MAE", "HAM", "MSEh", "TMSE", "GTMSE", "MSCE"), h = 10, holdout = FALSE,
  bounds = c("admissible", "none"), silent = c("all", "graph", "legend",
  "output", "none"), ...)
}
\arguments{
\item{data}{Vector, containing data needed to be forecasted. If a matrix (or
data.frame / data.table) is provided, then the first column is used as a
response variable, while the rest of the matrix is used as a set of explanatory
variables. \code{formula} can be used in the latter case in order to define what
relation to have.}

\item{seasonality}{The type of seasonality used in CES. Can be: \code{none}
- No seasonality; \code{simple} - Simple seasonality, using lagged CES
(based on \code{t-m} observation, where \code{m} is the seasonality lag);
\code{partial} - Partial seasonality with the real seasonal component
(equivalent to additive seasonality); \code{full} - Full seasonality with
complex seasonal component (can do both multiplicative and additive
seasonality, depending on the data). First letter can be used instead of
full words.

In case of the \code{auto.ces()} function, this parameter defines which models
to try.}

\item{lags}{Vector of lags to use in the model. Allows defining multiple seasonal models.}

\item{formula}{Formula to use in case of explanatory variables. If \code{NULL},
then all the variables are used as is. Can also include \code{trend}, which would add
the global trend. Only needed if \code{data} is a matrix or if \code{trend} is provided.}

\item{regressors}{The variable defines what to do with the provided explanatory
variables:
\code{"use"} means that all of the data should be used, while
\code{"select"} means that a selection using \code{ic} should be done,
\code{"adapt"} will trigger the mechanism of time varying parameters for the
explanatory variables.}

\item{initial}{Should be a character, which can be \code{"optimal"},
meaning that all initial states are optimised, or \code{"backcasting"},
meaning that the initials of dynamic part of the model are produced using
backcasting procedure (advised for data with high frequency). In the latter
case, the parameters of the explanatory variables are optimised. This is
recommended for CESX. Alternatively, you can set \code{initial="complete"}
backcasting, which means that all states (including explanatory variables)
are initialised via backcasting.}

\item{a}{First complex smoothing parameter. Should be a complex number.

NOTE! CES is very sensitive to a and b values so it is advised either to
leave them alone, or to use values from previously estimated model.}

\item{b}{Second complex smoothing parameter. Can be real if
\code{seasonality="partial"}. In case of \code{seasonality="full"} must be
complex number.}

\item{loss}{The type of Loss Function used in optimization. \code{loss} can
be:
\itemize{
\item \code{likelihood} - the model is estimated via the maximisation of the
likelihood of the function specified in \code{distribution};
\item \code{MSE} (Mean Squared Error),
\item \code{MAE} (Mean Absolute Error),
\item \code{HAM} (Half Absolute Moment),
\item \code{LASSO} - use LASSO to shrink the parameters of the model;
\item \code{RIDGE} - use RIDGE to shrink the parameters of the model;
\item \code{TMSE} - Trace Mean Squared Error,
\item \code{GTMSE} - Geometric Trace Mean Squared Error,
\item \code{MSEh} - optimisation using only h-steps ahead error,
\item \code{MSCE} - Mean Squared Cumulative Error.
}
In case of LASSO / RIDGE, the variables are not normalised prior to the estimation,
but the parameters are divided by the mean values of explanatory variables.

Note that model selection and combination works properly only for the default
\code{loss="likelihood"}.

Furthermore, just for fun the absolute and half analogues of multistep estimators
are available: \code{MAEh}, \code{TMAE}, \code{GTMAE}, \code{MACE},
\code{HAMh}, \code{THAM}, \code{GTHAM}, \code{CHAM}.

Last but not least, user can provide their own function here as well, making sure
that it accepts parameters \code{actual}, \code{fitted} and \code{B}. Here is an
example:

\code{lossFunction <- function(actual, fitted, B) return(mean(abs(actual-fitted)))}

\code{loss=lossFunction}}

\item{h}{The forecast horizon. Mainly needed for the multistep loss functions.}

\item{holdout}{Logical. If \code{TRUE}, then the holdout of the size \code{h}
is taken from the data (can be used for the model testing purposes).}

\item{bounds}{The type of bounds for the persistence to use in the model
estimation. Can be either \code{admissible} - guaranteeing the stability of the
model, or \code{none} - no restrictions (potentially dangerous).}

\item{silent}{Specifies, whether to provide the progress of the function or not.
If \code{TRUE}, then the function will print what it does and how much it has
already done.}

\item{model}{A previously estimated GUM model, if provided, the function
will not estimate anything and will use all its parameters.}

\item{...}{Other non-documented parameters. See \link[smooth]{adam} for
details. However, there are several unique parameters passed to the optimiser
in comparison with \code{adam}:
1. \code{algorithm0}, which defines what algorithm to use in nloptr for the initial
optimisation. By default, this is "NLOPT_LN_BOBYQA".
2. \code{algorithm} determines the second optimiser. By default this is
"NLOPT_LN_NELDERMEAD".
3. maxeval0 and maxeval, that determine the number of iterations for the two
optimisers. By default, \code{maxeval0=1000}, \code{maxeval=40*k}, where
k is the number of estimated parameters.
4. xtol_rel0 and xtol_rel, which are 1e-8 and 1e-6 respectively.
There are also ftol_rel0, ftol_rel, ftol_abs0 and ftol_abs, which by default
are set to values explained in the \code{nloptr.print.options()} function.}

\item{ic}{The information criterion to use in the model selection.}
}
\value{
Object of class "adam" is returned with similar elements to the
\link[smooth]{adam} function.
}
\description{
Function estimates CES in state space form with information potential equal
to errors and returns several variables.
}
\details{
The function estimates Complex Exponential Smoothing in the state space form
described in Svetunkov et al. (2022) with the information potential
equal to the approximation error.

The \code{auto.ces()} function implements the automatic seasonal component
selection based on information criteria.

\code{ces_old()} is the old implementation of the model and will be discontinued
starting from smooth v4.5.0.

\code{ces()} uses two optimisers to get good estimates of parameters. By default
these are BOBYQA and then Nelder-Mead. This can be regulated via \code{...} - see
details below.

For some more information about the model and its implementation, see the
vignette: \code{vignette("ces","smooth")}
}
\examples{
y <- rnorm(100,10,3)
ces(y, h=20, holdout=FALSE)

y <- 500 - c(1:100)*0.5 + rnorm(100,10,3)
ces(y, h=20, holdout=TRUE)

ces(BJsales, h=8, holdout=TRUE)

\donttest{ces(AirPassengers, h=18, holdout=TRUE, seasonality="s")
ces(AirPassengers, h=18, holdout=TRUE, seasonality="p")
ces(AirPassengers, h=18, holdout=TRUE, seasonality="f")}

y <- ts(rnorm(100,10,3),frequency=12)
# CES with and without holdout
auto.ces(y,h=20,holdout=TRUE)
auto.ces(y,h=20,holdout=FALSE)


# Selection between "none" and "full" seasonalities
\donttest{auto.ces(AirPassengers, h=12, holdout=TRUE,
                   seasonality=c("n","f"), ic="AIC")}

ourModel <- auto.ces(AirPassengers)

\donttest{summary(ourModel)}
forecast(ourModel, h=12)

}
\references{
\itemize{
\item Svetunkov I. (2023) Smooth forecasting with the smooth package in R. arXiv:2301.01790.
\doi{10.48550/arXiv.2301.01790}.
\item Svetunkov I. (2015 - Inf) "smooth" package for R - series of posts about the underlying
models and how to use them: \url{https://openforecast.org/category/r-en/smooth/}.
}

\itemize{
\item Svetunkov, I. (2023). Forecasting and Analytics with the Augmented
Dynamic Adaptive Model (ADAM) (1st ed.). Chapman and Hall/CRC.
\doi{10.1201/9781003452652}, online version: \url{https://openforecast.org/adam/}.
}

\itemize{
\item Snyder, R. D., 1985. Recursive Estimation of Dynamic Linear Models.
Journal of the Royal Statistical Society, Series B (Methodological) 47 (2), 272-276.
\item Hyndman, R.J., Koehler, A.B., Ord, J.K., and Snyder, R.D. (2008)
Forecasting with exponential smoothing: the state space approach,
Springer-Verlag. \doi{10.1007/978-3-540-71918-2}.
}

\itemize{
\item  Svetunkov, I., Kourentzes, N., & Ord, J. K. (2022).
Complex exponential smoothing. Naval Research Logistics, 69(8),
1108â€“1123. https://doi.org/10.1002/nav.22074
}
}
\seealso{
\code{\link[smooth]{adam}, \link[smooth]{es}}
}
\author{
Ivan Svetunkov, \email{ivan@svetunkov.com}
}
\keyword{models}
\keyword{nonlinear}
\keyword{regression}
\keyword{smooth}
\keyword{ts}
\keyword{univar}
